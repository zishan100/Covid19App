{"version":3,"sources":["component/card/card.module.css","component/card/card.js","api/api.js","component/chart/chart.js","component/countryPicker/countryPicker.js","component/Footer/footer.js","App.js","serviceWorker.js","index.js","App.module.css","component/Footer/footerstyle.module.css","component/chart/chartstyle.module.css","LogoContainer/covid19_logo.png"],"names":["module","exports","container","card","infected","recovered","deaths","Cards","_ref","_ref$data","data","confirmed","lastUpdate","undefined","react_default","a","createElement","className","styles","Grid","spacing","justify","item","component","Card","xs","md","cx","CardContent","Typography","color","gutterBottom","variant","build_default","start","end","separator","duration","Date","toDateString","url","fetchData","Object","asyncToGenerator","regenerator_default","mark","_callee","response","result","_result$data$summary","confirmedCasesIndian","discharged","lastRefreshed","wrap","_context","prev","next","fetch","sent","json","summary","abrupt","t0","console","log","stop","apply","this","arguments","fetchDailyData","_ref2","_callee2","_context2","Data","fetchCountryData","_ref3","_callee3","regional","_context3","map","country","loc","fetchCountry","_ref4","_callee4","Countries","_result$data$summary2","_lastRefreshed","Country","_Country$","_confirmedCasesIndian","_discharged","_deaths","Modified","_context4","filter","_x","Chart","countries","_useState","useState","_useState2","slicedToArray","dailyData","setdailyData","useEffect","t1","fetchAPI","Daily","lineCart","es","labels","day","datasets","label","borderColor","fill","backgroundColor","barChar","options","legend","display","title","text","concat","CountryPicker","handleChangeCountry","setCountries","fetchCountries","FormControl","formContainer","NativeSelect","defaultValue","onChange","e","target","value","i","key","Footer","footermain","content","App","state","_this","setState","_this$state","images","src","CoronaImage","alt","countryPicker","chart","footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c061bc20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"card_container__3IHp5\",\"card\":\"card_card__uKArp\",\"infected\":\"card_infected__J4hq9\",\"recovered\":\"card_recovered__3Ji1I\",\"deaths\":\"card_deaths__13K1W\"};","import React from 'react';\r\n\r\n\r\nimport { Card,Grid,CardContent,Typography} from '@material-ui/core';\r\n\r\nimport cx from 'classnames';\r\nimport CountUp from 'react-countup';\r\nimport styles from './card.module.css'  \r\nconst Cards = ({ data: { confirmed,recovered,deaths,lastUpdate}}) => {\r\n    if (confirmed===undefined)\r\n    {\r\n        return '...Loading';\r\n    }\r\n    // console.log(confirmed,recovered,deaths);  \r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify='center' >\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                  <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>\r\n                            Infected\r\n                        </Typography>\r\n                        \r\n                           \r\n                            \r\n                            <Typography variant='h5' >\r\n                            <CountUp start={0} end={confirmed} separator=',' duration={2.5}/>\r\n                           </Typography>       \r\n\r\n                        \r\n                    <Typography\r\n                        variant='h5'\r\n                        >\r\n                        {new Date(lastUpdate).toDateString()}  \r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} >\r\n                         No of active cases of COVID-19 \r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>\r\n                            Recovered \r\n                        </Typography>\r\n                                                                           <Typography\r\n                          variant='h5'\r\n                           >\r\n                          <CountUp start={0} end={recovered} separator=',' duration={2.5} />\r\n                         </Typography>\r\n\r\n                        \r\n                        \r\n                        <Typography\r\n                         variant='h5'\r\n                        >\r\n                        {new  Date(lastUpdate).toDateString()}  \r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} >\r\n                        No of recovered cases of COVID-19\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>\r\n                         Deaths\r\n                        </Typography>\r\n                        <Typography\r\n                            variant='h5'\r\n                           >\r\n                           <CountUp start={0} end={deaths} separator=',' duration={2.5} />\r\n                            </Typography>      \r\n                        \r\n                        \r\n                        <Typography\r\n                         variant='h5'\r\n                        >\r\n                        {new  Date(lastUpdate).toDateString()}  \r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} >\r\n                        No of deaths cases of COVID-19\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n           </Grid>  \r\n       </div>\r\n); \r\n\r\n}\r\nexport default Cards;\r\n","\r\nconst url = 'https://api.rootnet.in/covid19-in/stats/latest';\r\n\r\nconst newurl = 'https://api.rootnet.in/covid19-in/stats/history'; \r\n\r\nexport  const fetchData =async () => {\r\n    \r\n    try {\r\n        const response = await fetch(url);\r\n\r\n        const result = await response.json();\r\n        \r\n        const { data: { summary: { confirmedCasesIndian, discharged, deaths } },lastRefreshed}= result;\r\n        // console.log(result);\r\n         \r\n          \r\n        \r\n        return {\r\n            confirmed: confirmedCasesIndian,\r\n            recovered: discharged,\r\n            deaths: deaths,\r\n            lastUpdate:lastRefreshed\r\n       } \r\n    }\r\n    catch (error) {\r\n        console.log('Error Occured', error); \r\n       \r\n     } \r\n}\r\n\r\nexport const fetchDailyData =async () => {\r\n    \r\n    try {\r\n        const response = await fetch(newurl);   \r\n        const result = await response.json();\r\n        const { data} = result;\r\n        \r\n        \r\n        return {Data:data}; \r\n    }catch (error) {\r\n        console.log('Error in Fetching Daily Data!', error);\r\n    }  \r\n}\r\n\r\nexport const fetchCountryData = async () => {\r\n    try {\r\n     const response=await fetch(url)  \r\n        const result = await response.json();\r\n        const {data:{regional}} = result;\r\n         \r\n        // console.log(regional); \r\n        return regional.map(country => country.loc);\r\n    } catch (error) {\r\n        console.log(error);\r\n   } \r\n    \r\n\r\n\r\n}\r\n\r\n/*Fetch Individual  Data of Country  */\r\n\r\nexport const fetchCountry = async (Countries) => {\r\n     \r\n    \r\n      \r\n    try {\r\n     const response=await fetch(url)  \r\n        const result = await response.json();\r\n        \r\n        if (Countries === 'Global') {\r\n        const { data: { summary:{confirmedCasesIndian, discharged, deaths } }, lastRefreshed } = result;\r\n            \r\n           return {\r\n                confirmed: confirmedCasesIndian,\r\n                recovered: discharged,\r\n                deaths: deaths,\r\n                lastUpdate:lastRefreshed\r\n           } \r\n        } else {\r\n            const { data:{regional},lastRefreshed} = result;\r\n            const Country = regional.filter(country => {\r\n            \r\n                return country.loc === Countries\r\n            });\r\n            const { confirmedCasesIndian, discharged, deaths } = Country[0];\r\n            const Modified = {\r\n                confirmed: confirmedCasesIndian, recovered: discharged, deaths: deaths,lastUpdate:lastRefreshed \r\n            }    \r\n            // console.log(Modified);\r\n            return Modified;\r\n        } \r\n    } catch (error) {\r\n        console.log(error);\r\n   } \r\n    \r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import React,{useState,useEffect} from 'react';\r\n\r\nimport  styles from './chartstyle.module.css';\r\n\r\nimport { fetchDailyData } from '../../api/api';\r\n/* Here we importing chart Library to Implement*/\r\nimport {Line,Bar } from 'react-chartjs-2';\r\n\r\n\r\nconst Chart = ({data:{confirmed,recovered,deaths},countries}) => {\r\n    const [dailyData,setdailyData] = useState([]);    \r\n      \r\n    useEffect(() => {\r\n      const fetchAPI = async () => {\r\n          setdailyData(await fetchDailyData())  \r\n        }\r\n        \r\n        fetchAPI();\r\n      },[])\r\n       \r\n    const Daily = dailyData.Data;\r\n    \r\n     const lineCart = (\r\n        Daily ?\r\n            <Line\r\n                data={{\r\n                    labels:Daily.map(data=>data.day),\r\n                    datasets: [\r\n                        {\r\n                        data: Daily.map(({summary})=>summary.confirmedCasesIndian),\r\n                            label: 'Infected',\r\n                            borderColor: '#3333ff',\r\n                            fill:true\r\n                        },\r\n                        {\r\n                            data: Daily.map(({summary }) =>summary.deaths),\r\n                            label: 'Deaths',\r\n                            backgroundColor: 'rgba(255,0,0,0.5)',\r\n                            fill:true  \r\n                        }\r\n                     \r\n                    ]\r\n\r\n                }}\r\n               \r\n            /> : null\r\n    );\r\n    // console.log(confirmed, recovered, deaths,countries);\r\n    const barChar = (\r\n        confirmed>=0 ?\r\n            <Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: [\r\n                            'rgb(122, 122, 236)',\r\n                            'rgb(143, 243, 130)',\r\n                            'rgb(243, 98, 87)'\r\n                        ],\r\n                        data: [confirmed, recovered, deaths]\r\n                    }],\r\n                \r\n         \r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Current state in ${countries}` }\r\n                }}\r\n            \r\n            /> : null         \r\n     \r\n\r\n    )\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            {\r\n                (countries === '' || countries==='Global')\r\n                    ?\r\n                  lineCart :barChar \r\n          }\r\n        </div>\r\n      ); \r\n\r\n}\r\nexport default Chart;\r\n","import React , {useState,useEffect} from 'react';\r\n\r\nimport './countrystyle.module.css';\r\n\r\nimport { fetchCountryData } from '../../api/api';\r\nimport styles from './countrystyle.module.css';\r\n\r\nimport { FormControl,NativeSelect} from '@material-ui/core';\r\n\r\nconst CountryPicker = ({handleChangeCountry}) => {\r\n   \r\n    const [Countries, setCountries] = useState([]);\r\n    \r\n    useEffect( () => {\r\n        const fetchCountries=async ()=>{\r\n            \r\n            setCountries(await fetchCountryData()); \r\n        }\r\n        \r\n       fetchCountries(); \r\n     \r\n     },[setCountries]);\r\n     \r\n    \r\n    return (\r\n        <FormControl className={styles.formContainer}>\r\n            <NativeSelect defaultValue='' onChange={(e)=> handleChangeCountry(e.target.value)}>\r\n                <option value='Global'>Global</option>\r\n                {\r\n                Countries.map((country, i) => <option key={i} defaultValue='Global' value={country}>{country}</option>) \r\n                }     \r\n            </NativeSelect>\r\n        \r\n        </FormControl>\r\n\r\n); \r\n\r\n}\r\nexport default CountryPicker;\r\n","\r\nimport React from 'react';\r\nimport styles from './footerstyle.module.css';\r\n\r\n\r\nconst Footer = () => {\r\n     \r\n    return (\r\n        <div  className={styles.footermain}>\r\n           <p className={styles.content}>Created by Zishan CopyRight &copy; All Right Reserved</p>\r\n        </div>\r\n  ) \r\n\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\n\nimport styles from \"./App.module.css\";\nimport Card from './component/card/card';\nimport Chart from './component/chart/chart';\nimport CountryPicker from './component/countryPicker/countryPicker';\nimport Footer from './component/Footer/footer';\nimport { fetchDailyData, fetchData, fetchCountry } from './api/api';\n\nimport CoronaImage from './LogoContainer/covid19_logo.png';\n\n/* Here is Class Based Component to Pass Data Using State Property*/\nclass App extends Component {\n  \n  state = {\n    data: '',\n    countries:'',\n  }\n\n  async componentDidMount() {\n     \n    const data = await fetchData();\n    \n    this.setState({\n      data:data\n    })\n  }\n  handleChangeCountry =async (country) => {\n    \n    const Data = await fetchCountry(country);\n     \n    // console.log(Data);\n    this.setState({\n      data:Data ,\n      countries:country,\n    })\n    \n  }\n  \n   render() {\n     const {data,countries} = this.state;    \n    return (\n      <div className={styles.App}>\n        \n         <img className={styles.images} src={CoronaImage} alt='COVID-19' />\n         \n        <Card  data={data} />\n        \n        <CountryPicker  handleChangeCountry={this.handleChangeCountry}/> \n        <Chart data={data} countries={countries}/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport  App  from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3Th98\",\"images\":\"App_images__3pw0P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footermain\":\"footerstyle_footermain__3fbus\",\"content\":\"footerstyle_content__1QlTY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chartstyle_container__J_nM8\"};","module.exports = __webpack_public_path__ + \"static/media/covid19_logo.6ce9074d.png\";"],"sourceRoot":""}